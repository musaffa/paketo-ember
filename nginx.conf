daemon off;
worker_processes 4;
pid /tmp/nginx.pid;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
  gzip on;
  gzip_comp_level 6;
  gzip_min_length 512;

	server_tokens off;

  log_format cnb 'NginxLog "$request" $status $body_bytes_sent';
  access_log /dev/stdout cnb;
  error_log stderr;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
 	}

	server {
		listen {{port}} default_server;
		server_name _;
		keepalive_timeout 5;

    # if ($http_x_forwarded_proto != "https") {
    #   return 301 https://$host$request_uri;
    # }

		location / {
			proxy_pass http://app_server;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;
      proxy_hide_header 'Cache-Control';

      add_header Access-Control-Allow-Origin "http://localhost:{{port}}";
      add_header Cache-Control "public, max-age=31536000";
		}

		location = /index.html {
			proxy_pass http://app_server;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect off;
      proxy_cache off;
      proxy_hide_header 'Cache-Control';

      add_header Cache-Control "no-cache, max-age=0";
		}
	}
}
